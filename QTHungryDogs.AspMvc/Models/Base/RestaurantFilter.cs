//@GeneratedCode
namespace QTHungryDogs.AspMvc.Models.Base
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class RestaurantFilter : Models.View.IFilterModel
    {
        ///
        /// Generated by the generator
        ///
        static RestaurantFilter()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public RestaurantFilter()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.String? Name
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.String? OwnerName
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.String? UniqueName
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.String? Email
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public QTHungryDogs.Logic.Modules.Common.RestaurantState? State
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public bool HasEntityValue => Name != null || OwnerName != null || UniqueName != null || Email != null || State != null;
        private bool show = true;
        ///
        /// Generated by the generator
        ///
        public bool Show => show;
        ///
        /// Generated by the generator
        ///
        public string CreateEntityPredicate()
        {
            var result = new System.Text.StringBuilder();
            if (Name != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(Name != null && Name.Contains(\"{Name}\"))");
            }
            if (OwnerName != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(OwnerName != null && OwnerName.Contains(\"{OwnerName}\"))");
            }
            if (UniqueName != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(UniqueName != null && UniqueName.Contains(\"{UniqueName}\"))");
            }
            if (Email != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(Email != null && Email.Contains(\"{Email}\"))");
            }
            if (State != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                var ev = Convert.ChangeType(State, typeof(int));
                result.Append($"(State != null && State =={ev})");
            }
            return result.ToString();
        }
        ///
        /// Generated by the generator
        ///
        public override string ToString()
        {
            return $"Name: {(Name ?? "---")} OwnerName: {(OwnerName ?? "---")} UniqueName: {(UniqueName ?? "---")} Email: {(Email ?? "---")} State: {(State != null ? State : "---")} ";
        }
    }
}
