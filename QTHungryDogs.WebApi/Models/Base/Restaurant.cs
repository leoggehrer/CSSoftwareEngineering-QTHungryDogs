//@GeneratedCode
namespace QTHungryDogs.WebApi.Models.Base
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class Restaurant
    {
        ///
        /// Generated by the generator
        ///
        static Restaurant()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public Restaurant()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.String Name
        {
            get;
            set;
        }
        = string.Empty;
        ///
        /// Generated by the generator
        ///
        public System.String OwnerName
        {
            get;
            set;
        }
        = string.Empty;
        ///
        /// Generated by the generator
        ///
        public System.String UniqueName
        {
            get;
            set;
        }
        = string.Empty;
        ///
        /// Generated by the generator
        ///
        public System.String Email
        {
            get;
            set;
        }
        = string.Empty;
        ///
        /// Generated by the generator
        ///
        public QTHungryDogs.Logic.Modules.Common.RestaurantState State
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.Base.Restaurant Create()
        {
            BeforeCreate();
            var result = new QTHungryDogs.WebApi.Models.Base.Restaurant();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.Base.Restaurant Create(object other)
        {
            BeforeCreate(other);
            CommonBase.Extensions.ObjectExtensions.CheckArgument(other, nameof(other));
            var result = new QTHungryDogs.WebApi.Models.Base.Restaurant();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.Base.Restaurant instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.Base.Restaurant instance, object other);
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.Base.Restaurant Create(QTHungryDogs.Logic.Entities.Base.Restaurant other)
        {
            BeforeCreate(other);
            var result = new QTHungryDogs.WebApi.Models.Base.Restaurant();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate(QTHungryDogs.Logic.Entities.Base.Restaurant other);
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.Base.Restaurant instance, QTHungryDogs.Logic.Entities.Base.Restaurant other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTHungryDogs.Logic.Entities.Base.Restaurant other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Name = other.Name;
                OwnerName = other.OwnerName;
                UniqueName = other.UniqueName;
                Email = other.Email;
                State = other.State;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTHungryDogs.Logic.Entities.Base.Restaurant other, ref bool handled);
        partial void AfterCopyProperties(QTHungryDogs.Logic.Entities.Base.Restaurant other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTHungryDogs.WebApi.Models.Base.Restaurant other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Name = other.Name;
                OwnerName = other.OwnerName;
                UniqueName = other.UniqueName;
                Email = other.Email;
                State = other.State;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTHungryDogs.WebApi.Models.Base.Restaurant other, ref bool handled);
        partial void AfterCopyProperties(QTHungryDogs.WebApi.Models.Base.Restaurant other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            if (obj is not QTHungryDogs.Logic.Entities.Base.Restaurant instance)
            {
                return false;
            }
            return base.Equals(instance) && Equals(instance);
        }
        ///
        /// Generated by the generator
        ///
        protected bool Equals(QTHungryDogs.Logic.Entities.Base.Restaurant other)
        {
            return IsEqualsWith(RowVersion, other.RowVersion)
            && Id == other.Id;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return HashCode.Combine(Name, OwnerName, UniqueName, Email, State, RowVersion, HashCode.Combine(Id));
        }
    }
}
