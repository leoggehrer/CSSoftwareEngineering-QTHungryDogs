//@GeneratedCode
namespace QTHungryDogs.WebApi.Models.App
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class SpecialOpeningHour
    {
        ///
        /// Generated by the generator
        ///
        static SpecialOpeningHour()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public SpecialOpeningHour()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.Int32 RestaurantId
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.DateTime? From
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.DateTime? To
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public System.String? Notes
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public QTHungryDogs.Logic.Modules.Common.SpecialOpenState State
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.App.SpecialOpeningHour Create()
        {
            BeforeCreate();
            var result = new QTHungryDogs.WebApi.Models.App.SpecialOpeningHour();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.App.SpecialOpeningHour Create(object other)
        {
            BeforeCreate(other);
            CommonBase.Extensions.ObjectExtensions.CheckArgument(other, nameof(other));
            var result = new QTHungryDogs.WebApi.Models.App.SpecialOpeningHour();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour instance, object other);
        ///
        /// Generated by the generator
        ///
        public static QTHungryDogs.WebApi.Models.App.SpecialOpeningHour Create(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other)
        {
            BeforeCreate(other);
            var result = new QTHungryDogs.WebApi.Models.App.SpecialOpeningHour();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other);
        static partial void AfterCreate(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour instance, QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                RestaurantId = other.RestaurantId;
                From = other.From;
                To = other.To;
                Notes = other.Notes;
                State = other.State;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other, ref bool handled);
        partial void AfterCopyProperties(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                RestaurantId = other.RestaurantId;
                From = other.From;
                To = other.To;
                Notes = other.Notes;
                State = other.State;
                RowVersion = other.RowVersion;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour other, ref bool handled);
        partial void AfterCopyProperties(QTHungryDogs.WebApi.Models.App.SpecialOpeningHour other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            if (obj is not QTHungryDogs.Logic.Entities.App.SpecialOpeningHour instance)
            {
                return false;
            }
            return base.Equals(instance) && Equals(instance);
        }
        ///
        /// Generated by the generator
        ///
        protected bool Equals(QTHungryDogs.Logic.Entities.App.SpecialOpeningHour other)
        {
            return IsEqualsWith(RowVersion, other.RowVersion)
            && Id == other.Id;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return HashCode.Combine(RestaurantId, From, To, Notes, State, RowVersion, HashCode.Combine(Id));
        }
    }
}
